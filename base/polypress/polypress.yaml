---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: polypress
    component: polypress-web
    environment: dev
  name: polypress
spec:
  replicas: 8
  selector:
    matchLabels:
      app: polypress
      component: polypress-web
      environment: dev
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: polypress
        component: polypress-web
        environment: dev
    spec:
      containers:
        - args:
            - bash
            - -c
            - rm -f tmp/pids/server.pid && mkdir -p tmp/pids && mkdir -p pids && ln -sf /dev/stdout /polypress/log/production.log && bundle exec puma -C config/puma.rb
          env:
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_HOST
                  name: env
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PORT
                  name: env
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_ERLANG_COOKIE
                  name: env
            - name: RABBITMQ_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PASSWORD
                  name: env
            - name: RABBITMQ_URL
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_URL
                  name: env
            - name: RABBITMQ_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_USERNAME
                  name: env
            - name: RABBITMQ_VHOST
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_VHOST
                  name: env
            - name: POLYPRESS_DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_DB_NAME
                  name: env
            - name: POLYPRESS_DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_DB_HOST
                  name: env
            - name: POLYPRESS_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_DB_PASSWORD
                  name: env
            - name: POLYPRESS_DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_DB_PORT
                  name: env
            - name: POLYPRESS_DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_DB_USERNAME
                  name: env
            - name: POLYPRESS_DB_REPLICA_SET_NAME
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_DB_REPLICA_SET_NAME
                  name: env
            - name: POLYPRESS_DB_AUTH
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_DB_AUTH
                  name: env
            - name: MITC_HOST
              valueFrom:
                configMapKeyRef:
                  key: MITC_HOST
                  name: env
            - name: MITC_PORT
              valueFrom:
                configMapKeyRef:
                  key: MITC_PORT
                  name: env
            - name: MITC_URL
              valueFrom:
                configMapKeyRef:
                  key: MITC_URL
                  name: env
            - name: CARTAFACT_HOST
              valueFrom:
                configMapKeyRef:
                  key: CARTAFACT_HOST
                  name: env
            - name: SECRET_KEY_BASE
              valueFrom:
                configMapKeyRef:
                  key: POLYPRESS_SECRET_KEY_BASE
                  name: env
            - name: RAILS_ENV
              valueFrom:
                configMapKeyRef:
                  key: RAILS_ENV
                  name: env
          image: public.ecr.aws/ideacrew/polypress:me-0.1.0
          name: polypress
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 5m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 500Mi
      priorityClassName: high-priority-app-process
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: polypress
    component: polypress-web
    environment: dev
  name: polypress
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  type: NodePort
  selector:
    app: polypress
    component: polypress-web
    environment: dev
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: polypress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: "dev-internal"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/success-codes: 200,201,301,302
spec:
  rules:
    - host: dev-polypress.cme.openhbx.org
      http:
        paths:
         - path: /*
           backend:
             serviceName: polypress
             servicePort: 3000
